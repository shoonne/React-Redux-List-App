import React, { Component } from 'react';
import { 
    Text, 
    TouchableWithoutFeedback, 
    View,
    LayoutAnimation }       from 'react-native';
import { connect }          from 'react-redux';
import {CardSection}        from './common';
import * as actions         from '../actions';


class ListItem extends Component {
    componentWillUpdate () {
        LayoutAnimation.spring(); // Animates any movement on the screen
    }

    // Compares the id of the selected id generated by the reducer
    renderDiscription () {
        const {library, expanded} = this.props
        if (expanded){
            return (
                <CardSection>
                <Text style={{flex: 1}}>{library.item.description}</Text>
                </CardSection>                
            );
        }
    }
    render(){
        const {titleStyle} = styles;
        const {id, title}  = this.props.library.item;

        
        
        return(
            <TouchableWithoutFeedback
            onPress={()=> this.props.selectLibrary(id)}
            >
                <View>
                <CardSection>
                    <Text style={titleStyle}>
                    {title}
                    </Text>
                </CardSection>
                {this.renderDiscription()}
                </View>
            </TouchableWithoutFeedback>
        
        );

    }
}

const styles = {
    titleStyle: {
        fontSize: 18,
        paddingLeft: 15,
    }
}

mapStateToProps = (state, ownProps) => {
    const expanded = state.selectedLibraryId === ownProps.library.item.id
    return {expanded}; 
}
export default connect(mapStateToProps, actions)(ListItem);
// First argument is explicity mapStateToProps. Which isnt in use. We use null.
// Turning actions creator to a action that i dispatched to the redux store.
// Taking all the actions and adds it as props to the listItem